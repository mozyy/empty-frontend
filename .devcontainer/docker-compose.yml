version: "3"

services:
  app:
    build:
      context: .
      dockerfile: Dockerfile
      args:
        # [Choice] Node.js version: 14, 12, 10
        # On Linux, you may need to update USER_UID and USER_GID below if not your local UID is not 1000.
        - USER_UID=1000
        - USER_GID=1000
        - VARIANT=14

    image: mozyy/empty-compose-app

    init: true
    environment: 
      # cache yarn modules
      - YARN_CACHE_FOLDER=/workspaces/cache/yarn_cache
    volumes:
      # Forwards the local Docker socket to the container.
      - /var/run/docker.sock:/var/run/docker-host.sock
      # Update this to wherever you want VS Code to mount the folder of your project
      - ..:/workspace:cached
    # Overrides default command so things don't shut down after the process ends.
    entrypoint: /usr/local/share/docker-init.sh
    command: sleep infinity

    # Uncomment the next four lines if you will use a ptrace-based debuggers like C++, Go, and Rust.
    # cap_add:
    #  - SYS_PTRACE
    # security_opt:
    #   - seccomp:unconfined

    # Uncomment the next line to use a non-root user for all processes.
    # user: vscode

    # Use "forwardPorts" in **devcontainer.json** to forward an app port locally.
    # (Adding the "ports" property to this file will not forward from a Codespace.)

  empty-news:
    build:
      context: .
      dockerfile: Dockerfile.news
    image: mozyy/empty-compose-news
    networks:
      - envoymesh
  empty-envoy:
    build:
      context: .
      dockerfile: Dockerfile.envoy
    image: mozyy/empty-compose-envoy
    depends_on:
      - empty-news
    networks:
      - envoymesh
    ports:
      - "50053:50051"
      - "9901:9901"

networks:
  envoymesh: {}